#!/bin/bash

# WARNING: This file was generated by chef, any edits you make here will be nuked!
# Instead consider amending the chef recipe and re-deploying with Knife Solo

set -e

APP_ROOT=<%= current_path %>
PID_PATH=$APP_ROOT/tmp/pids
AS_USER=<%= fetch(:deploy_user) %>
RAILS_ENV= <%= "#{fetch(:rails_env)}" %>

action="$1"
set -u

cd $APP_ROOT || exit 1

sig_worker () {
  workerpid=$PID_PATH/resque.$2.pid
  test -s "$workerpid" && kill -$1 `cat $workerpid`
}

start_worker() {
  <% setup_path = "PATH=/usr/local/bin:/home/#{$AS_USER}/.rbenv/shims:/home/#{$AS_USER}/.rbenv/bin:$PATH" %>
  queue="*"
  num=$1
  pidfile=resque.$num.pid
  logfile=resque_worker.$num.log
  nohup su -l <%= $AS_USER %> -c "cd <%= $APP_ROOT %> && <%= setup_path %> RAILS_ENV=<%= "#{fetch(:rails_env)}" %> bundle exec rake resque:work QUEUE='*' VERBOSE=1 PIDFILE=tmp/pids/$pidfile >> log/$logfile 2>&1" >/dev/null 2>/dev/null &
}

stop_worker() {
  sig_worker QUIT $1 && rm $PID_PATH/resque.$1.pid
}

start_resque() {
  for num in {0..<%= (2) - 1 %>}
  do
    start_worker $num
  done
}

stop_resque() {
  for num in {0..<%= (2) - 1 %>}
  do
    stop_worker $num || true
  done
}

case $action in
  start)
    start_resque
    ;;
  start_worker)
    start_worker $2
    ;;
  restart)
    stop_resque
    start_resque
    ;;
  stop)
    stop_resque
    ;;
  stop_worker)
    stop_worker $2
    ;;
  *)
    echo >&2 "Usage: $0 <start|restart|stop>"
    exit 1
    ;;
esac